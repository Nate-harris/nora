import { motion } from "framer-motion";
import {
  FRAMER_TRANSITION_EASEOUT,
  FRAMER_TRANSITION_FASTEASE,
  FRAMER_TRANSITION_FASTEREASE,
} from "../../lib/framer/animations";
import css from "styled-jsx/css";
import cx from "classnames";
import { useCallback, useState } from "react";
const FRAME_COLORS = {
  LIGHT: "light",
  DARK: "dark",
};

const LETTER_PATHS = [
  {
    id: "a-top",
    d: "M468.08,128.54c.31,17.63,.58,46.24-1.96,46.25h-21.87c1.13-6.06,.99-53.55,.83-62.83-.06-3.53-.12-6.27-.12-7.24,.08-15.44,1.26-35.57-12.45-45.9-2.42-1.82-5.15-3.2-8-4.19-3.04-1.06-6.24-1.59-9.46-1.59-15.09,0-27.72,11.73-29.03,27.05-.48,5.68-1.37,12.4-1.27,19.42,.18,12.61,1.32,61.53,.32,75.28h-26.13c1.98-22.76-.16-45.62-.48-68.39-.18-12.48,1.42-24.44,2.3-34.54,2.37-27.23,25.32-48.09,52.75-48.09,5.84,0,11.67,.96,17.19,2.84,5.17,1.77,10.13,4.21,14.54,7.45,24.92,18.36,22.76,54.15,22.62,81.6-.01,1.71,.1,6.6,.21,12.87Z",
  },
  {
    id: "a-middle",
    d: "M445.08,111.95c.16,9.29,.3,56.77-.83,62.83h-17.74c.37-4.56,.33-32.18,.27-35.38-.02-1.25-.04-2.22-.04-2.55,.03-5.45,.45-12.55-4.39-16.19-.85-.65-1.81-1.13-2.82-1.48-1.07-.37-2.2-.56-3.33-.56-5.32,0-9.78,4.14-10.24,9.54-.17,2-.48,4.38-.45,6.85,.06,4.34,.45,33.53,.14,39.78h-20.56c1-13.75-.14-62.68-.32-75.28-.1-7.02,.78-13.74,1.27-19.42,1.31-15.31,13.94-27.05,29.03-27.05,3.21,0,6.42,.54,9.46,1.59,2.85,1,5.58,2.37,8,4.19,13.71,10.33,12.52,30.45,12.45,45.9,0,.96,.06,3.71,.12,7.24Zm-22.22-23.91c0-3.9-3.17-7.05-7.08-7.05s-7.08,3.16-7.08,7.05,3.17,7.05,7.08,7.05,7.08-3.16,7.08-7.05Z",
  },
  {
    id: "a-bottom",
    d: "M426.78,139.4c.06,3.21,.1,30.83-.27,35.38h-20.87c.31-6.25-.08-35.43-.14-39.78-.04-2.48,.28-4.85,.45-6.85,.46-5.4,4.92-9.54,10.24-9.54,1.13,0,2.26,.19,3.33,.56,1.01,.35,1.97,.84,2.82,1.48,4.84,3.64,4.42,10.74,4.39,16.19,0,.33,.02,1.3,.04,2.55Z",
  },
  {
    id: "r-right",
    d: "M313.27,92.91c21.87,3.38,43.96,17.34,41.57,74.07-.18,4.29-1.82,7.08-5.89,7.08h-20.67c1.27-11.26,4.16-22.5,3.3-33.94-.52-6.79-2.63-13.65-6.93-18.25-5.87-6.27-14.27-7.12-21.85-7.39-10.61-.38-21.24-2.05-24.74-15.7-1.62-6.31-.99-13.21,.99-19.38,3.46-10.76,11.53-18.02,15.2-28.56,2.95-8.49,3.09-17.72,2.22-26.8h26.18c17.97,0,32.56,12.92,32.75,31.87-.2,27.72-23.48,33.93-41.49,33.93-.97,0-1.59,.99-1.59,1.85,0,.59,.28,1.11,.94,1.21Zm6.87-36.69c0-3.89-3.15-7.04-7.05-7.04s-7.05,3.15-7.05,7.04,3.16,7.04,7.05,7.04,7.05-3.15,7.05-7.04Z",
  },
  {
    id: "r-left",
    d: "M255.53,128.93c.07-.78,.14-1.56,.2-2.33,.94-8.16,1.47-17.35,1.32-27.57-.14-9.71-.64-18.47-1.37-26.28-.04-.45-.08-.89-.12-1.33-.15-1.51-.36-2.99-.62-4.46-1.66-16.08-4.12-28.61-5.73-35.77-.77-3.44,1.66-6.76,5.01-6.81,9.12-.13,21.05-.35,30.33-.35h11.93c.86,9.07,.73,18.3-2.22,26.8-3.67,10.54-11.74,17.81-15.2,28.56-1.98,6.17-2.61,13.07-.99,19.38,3.5,13.66,14.12,15.32,24.74,15.7,7.58,.27,15.98,1.12,21.85,7.39,4.3,4.6,6.41,11.46,6.93,18.25,.87,11.44-2.03,22.68-3.3,33.94h-17.33c-3.03,0-5.19-3.07-4.37-6.16,1-3.77,1.91-9.6,1.91-18.3,0-19.35-23.75-15.33-23.75,1.1,0,7.2,1.06,12.8,2.26,16.8,1.12,3.78-1.59,7.62-5.33,7.59l-27.31-.23c-3.4,0-5.89-3.38-5.07-6.87,3.16-13.33,5.14-26.48,6.25-39.07Z",
  },
  {
    id: "o-middle",
    d: "M251.78,72.88c1.3,15.55,1.78,33.92,.23,53.72-.07,.69-.15,1.37-.23,2.04-.02,.12-.03,.25-.05,.37-4.72,4.43-9.66,8.08-15.97,7.08-14.87-2.35-20.56-26.26-38.15-20.51-4.01,1.31-7.31,4.37-10.06,7.73-6.44,7.88-13.89,18.93-24.93,19.7-3.2,.22-7.1-1-9.81-3.3-1.39-3.81-2.32-7.84-2.73-12.03-.35-3.64-.59-7.48-.75-11.57v-.03c-.25-8.69-.12-18.35,.57-28.94,.08-1.01,.17-2.02,.26-3.02,2.44,3.01,6.52,4.68,10.36,4.42,11.04-.77,18.49-11.82,24.92-19.7,2.75-3.36,6.05-6.42,10.06-7.73,17.6-5.75,23.28,18.16,38.15,20.52,6.79,1.07,13.03-3.84,18.13-8.74Zm-43.18,20.48c0-3.89-2.97-7.04-6.64-7.04s-6.64,3.15-6.64,7.04,2.97,7.04,6.64,7.04,6.64-3.15,6.64-7.04Z",
  },
  {
    id: "o-top",
    d: "M251.24,66.97c.19,1.92,.37,3.89,.54,5.91-5.1,4.9-11.34,9.81-18.13,8.74-14.87-2.36-20.56-26.27-38.15-20.52-4.01,1.31-7.31,4.37-10.06,7.73-6.44,7.88-13.88,18.93-24.92,19.7-3.84,.27-7.91-1.41-10.36-4.42,.37-4.2,.77-8.21,1.08-11.97,.03-.42,.08-.85,.12-1.27,1.39-13.05,7.66-24.56,16.68-32.9,9.31-8.59,21.56-13.8,34.42-13.8,24.03,0,44.44,18.17,48.78,42.78Z",
  },
  {
    id: "o-bottom",
    d: "M235.76,136.09c6.31,1,11.25-2.64,15.97-7.08-3.32,26.1-24.51,45.52-49.4,45.39h-.2c-21.35-.1-41.87-14.25-49.32-34.7,2.71,2.3,6.61,3.52,9.81,3.3,11.04-.77,18.49-11.82,24.93-19.7,2.75-3.36,6.05-6.42,10.06-7.73,17.59-5.75,23.28,18.16,38.15,20.51Z",
  },
  {
    id: "n-right",
    d: "M144.89,84.06c-.08,1.04-.15,2.06-.21,3.08-.51,6.19-.9,12.75-.81,19.46,.04,3.32,.13,6.47,.25,9.49v.03c.71,25.62,4.66,42.99,7.36,52.07,1.07,3.62-1.23,7.39-4.47,7.34-5.19-.07-12.69-.16-20.58-.19,.11-1.73,.2-3.46,.25-5.2,.47-17.26-1.69-34.93-10.56-49.16-8.92-14.3-22.38-22.55-37.13-24.78-7.42-1.12-14.88-3.54-21.23-8.34-18.68-14.12-16.34-42.42-9.19-63.77,2.49-.02,4.81-.03,6.77-.03,11.31,0,18.19,12.58,22.97,21.36,5.86,10.72,10.06,24.6,21.24,30.93,3.95,2.24,9.9,2.87,10.16-3.16,.28-6.46-3.13-12.88-4.15-19.23-1.18-7.33-1.29-14.95,.45-22.2,.66-2.78,1.25-4.48,3.38-6.19,1.72-1.38,4.17-1.99,6.08-2.15,2.42-.19,5.02,.02,7.45,.02h25.12c3.03,0,5.26,3.37,4.54,6.85-3.04,14.63-5.14,28.17-6.49,40.6-.5,4.54-.89,8.94-1.2,13.18Z",
  },
  {
    id: "n-left",
    d: "M116.11,120.98c8.87,14.23,11.03,31.9,10.56,49.16-.05,1.73-.13,3.47-.25,5.2-2.12,0-4.28-.01-6.43-.01-6.19,0-13.33,.66-19.13-2.46-9.02-4.87-11.29-17.2-14.55-26.13-1.76-4.82-12.8-25.5-20.51-18.58-3.06,2.75,.35,11.82,.98,15.07,1.2,6.17,2.36,12.44,2,18.77-.34,6.2-3.82,12.87-10.68,12.87H24.35c-3.04,0-5.27-3.38-4.53-6.87,12.92-60.89,3.77-117.78-.08-136.8-.69-3.44,1.49-6.75,4.49-6.8,6.25-.1,16.25-.25,24.33-.31-7.15,21.35-9.49,49.65,9.19,63.77,6.36,4.8,13.81,7.22,21.23,8.34,14.74,2.23,28.21,10.48,37.13,24.78Z",
  },
];
const COMPLETED = Array(8).fill(false);

const FRAME_INNER_WIDTH = 490;
const FRAME_INNER_HEIGHT = 200;
const completedVariants = {
  hidden: {
    x: -1 * FRAME_INNER_WIDTH,
    transition: FRAMER_TRANSITION_FASTEASE,
  },
  visible: (i) => ({
    x: 0,
    transition: {
      ...FRAMER_TRANSITION_FASTEASE,
      delay: 0.05 * i + 0.2,
    },
  }),
};

const containerVariants = {
  hidden: {
    y: -30,
    transition: FRAMER_TRANSITION_FASTEASE,
  },
  active: ({ direction }) => ({
    x: `${direction * 50}%`,
    y: 0,
    transition: {
      ...FRAMER_TRANSITION_EASEOUT,
      delay: FRAMER_TRANSITION_EASEOUT.duration,
    },
  }),
  inactive: {
    opacity: 0,
    height: 0,
    y: 30,
    transition: FRAMER_TRANSITION_EASEOUT,
  },
  visible: ({ index }) => ({
    y: 0,
    transition: {
      ...FRAMER_TRANSITION_FASTEASE,
      delay: 0.05 * index + 0.2,
    },
  }),
};

const SVG = ({ colors, active, frameColor = FRAME_COLORS.DARK }) => {
  const [hovered, setHovered] = useState(null);

  const renderLetters = useCallback(() => {
    return LETTER_PATHS.map((letter, index) => {
      const { hex } = colors[index % (colors.length - 1)];
      return <motion.path key={index} id={letter.id} d={letter.d} fill={hex} />;
    });
  }, [colors]);

  const renderCompleted = useCallback(() => {
    return COMPLETED.map((letter, index) => {
      const { hex } = colors[index % (colors.length - 1)];
      return (
        <motion.rect
          custom={index}
          key={`completed-${index}`}
          fill={hex}
          initial={active || hovered ? "visible" : "hidden"}
          animate={active || hovered ? "visible" : "hidden"}
          variants={completedVariants}
          width={
            (COMPLETED.length - index) * (FRAME_INNER_WIDTH / COMPLETED.length)
          }
          height="250"
        />
      );
    });
  }, [colors, active, hovered]);

  return (
    <svg
      className="rounded-xl overflow-hidden"
      onMouseEnter={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 487.89 197.02"
    >
      <g id="frame"></g>
      <motion.g id="letters" animate={{ scale: hovered ? 0.95 : 1 }}>
        {renderLetters()}
      </motion.g>
      <g id="completed" className="pointer-events-none">
        {renderCompleted()}
      </g>
    </svg>
  );
};

const Palette = ({
  active,
  noneSelected,
  name,
  colors,
  index,
  total,
  last,
  onClick,
}) => {
  const isLastInOdd = last && total % 2 !== 0;

  return (
    <motion.div
      custom={{
        index,
        direction: isLastInOdd ? 0 : index % 2 === 0 ? 1 : -1,
      }}
      initial={active ? "active" : noneSelected ? "hidden" : "inactive"}
      animate={active ? "active" : noneSelected ? "visible" : "inactive"}
      variants={containerVariants}
      className="w-350 overflow-hidden"
      value={name}
      onClick={onClick}
    >
      <SVG
        colors={colors}
        active={active}
        frameColor={index % 2 === 0 ? FRAME_COLORS.DARK : FRAME_COLORS.LIGHT}
      />
    </motion.div>
  );
};

export default Palette;
